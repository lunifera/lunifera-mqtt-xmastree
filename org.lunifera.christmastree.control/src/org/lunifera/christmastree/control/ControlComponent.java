package org.lunifera.christmastree.control;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;

import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttMessage;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.MouseEvents;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.StreamResource;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Video;

@SuppressWarnings("serial")
public class ControlComponent extends CustomComponent implements MqttCallback {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private GridLayout panel;
	@AutoGenerated
	private Embedded button_smooth;
	@AutoGenerated
	private Embedded button_lightpurple;
	@AutoGenerated
	private Embedded button_darkcyan;
	@AutoGenerated
	private Embedded button_yellow;
	@AutoGenerated
	private Embedded button_fade;
	@AutoGenerated
	private Embedded button_purple;
	@AutoGenerated
	private Embedded button_cyan;
	@AutoGenerated
	private Embedded button_lightorange;
	@AutoGenerated
	private Embedded button_strobe;
	@AutoGenerated
	private Embedded button_darkpurple;
	@AutoGenerated
	private Embedded button_lightcyan;
	@AutoGenerated
	private Embedded button_orange;
	@AutoGenerated
	private Embedded button_flash;
	@AutoGenerated
	private Embedded button_lightblue;
	@AutoGenerated
	private Embedded button_lightgreen;
	@AutoGenerated
	private Embedded button_darkorange;
	@AutoGenerated
	private Embedded button_white;
	@AutoGenerated
	private Embedded button_blue;
	@AutoGenerated
	private Embedded button_green;
	@AutoGenerated
	private Embedded button_red;
	@AutoGenerated
	private Embedded button_on;
	@AutoGenerated
	private Embedded button_off;
	@AutoGenerated
	private Embedded button_darker;
	@AutoGenerated
	private Embedded button_brighter;
	@AutoGenerated
	private Embedded button_star;
	@AutoGenerated
	private Embedded button_snow;
	@AutoGenerated
	private Embedded button_angel;

	private CommandDelegate delegate;

	private MouseEvents.ClickListener listener = new Listener();

	// private Embedded image;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ControlComponent(CommandDelegate delegate) {
		this.delegate = delegate;
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// panel
		panel = buildPanel();
		mainLayout.addComponent(panel, "top:140.0px;left:100.0px;");

		// title area
		ThemeResource resource = new ThemeResource("images/Title.png");
		Image title = new Image(" ", resource);
		title.setHeight("108px");
		title.setWidth("827px");
		mainLayout.addComponent(title, "top:22.0px;left:120.0px");

		// tree view ;-)
		Image image = new Image();
//		image.setShowControls(true);
		// Label image = new Label();
		image.setHeight("480px");
		image.setWidth("640px");
		image.setSource(new ExternalResource("http://192.168.0.108:8081/stream", "video/x-motion-jpeg"));
		// image.setValue("<div style=\"overflow:hidden; width: 400px;
		// margin-left: -60px;\">"
		// + "<img src=\"http://luniferaoffice.dyndns.org:8081\"/>" + "</div>");
		// image.setContentMode(ContentMode.HTML);
		mainLayout.addComponent(image, "top:140.0px;left:600.0px;");

		return mainLayout;
	}

	@SuppressWarnings("deprecation")
	@AutoGenerated
	private GridLayout buildPanel() {
		// common part: create layout
		panel = new GridLayout();
		panel.setImmediate(false);
		panel.setWidth("400px");
		panel.setHeight("400px");
		panel.setMargin(false);
		panel.setColumns(4);
		panel.setRows(7);

		// button_bighter
		button_brighter = new Embedded(null, new ThemeResource("./images/brighter.png"));
		button_brighter.setCaption("Brighter");
		button_brighter.setImmediate(true);
		button_brighter.setWidth("-1px");
		button_brighter.setHeight("-1px");
		button_brighter.addClickListener(listener);
		button_brighter.setStyleName("xmas-button-brighter");
		panel.addComponent(button_brighter, 0, 0);
		panel.setComponentAlignment(button_brighter, new Alignment(48));

		// button_darker
		button_darker = new Embedded(null, new ThemeResource("./images/darker.png"));
		button_darker.setCaption("Darker");
		button_darker.setImmediate(true);
		button_darker.setWidth("-1px");
		button_darker.setHeight("-1px");
		button_darker.addClickListener(listener);
		button_darker.setStyleName("xmas-button-darker");
		panel.addComponent(button_darker, 1, 0);
		panel.setComponentAlignment(button_darker, new Alignment(48));

		// button_off
		button_off = new Embedded(null, new ThemeResource("./images/off.png"));
		button_off.setCaption("OFF");
		button_off.setImmediate(true);
		button_off.setWidth("-1px");
		button_off.setHeight("-1px");
		button_off.addClickListener(listener);
		button_off.setStyleName("xmas-button-off");
		panel.addComponent(button_off, 2, 0);
		panel.setComponentAlignment(button_off, new Alignment(48));

		// button_on
		button_on = new Embedded(null, new ThemeResource("./images/on.png"));
		button_on.setCaption("ON");
		button_on.setImmediate(true);
		button_on.setWidth("-1px");
		button_on.setHeight("-1px");
		button_on.addListener(listener);
		button_on.setStyleName("xmas-button-on");
		panel.addComponent(button_on, 3, 0);
		panel.setComponentAlignment(button_on, new Alignment(48));

		// button_red
		button_red = new Embedded(null, new ThemeResource("./images/red.png"));
		button_red.setCaption("red");
		button_red.setImmediate(true);
		button_red.setWidth("-1px");
		button_red.setHeight("-1px");
		button_red.addListener(listener);
		button_red.setStyleName("xmas-button-red");
		panel.addComponent(button_red, 0, 1);
		panel.setComponentAlignment(button_red, new Alignment(48));

		// button_green
		button_green = new Embedded(null, new ThemeResource("./images/green.png"));
		button_green.setCaption("green");
		button_green.setImmediate(true);
		button_green.setWidth("-1px");
		button_green.setHeight("-1px");
		button_green.setStyleName("xmas-button-green");
		button_green.addListener(listener);
		panel.addComponent(button_green, 1, 1);
		panel.setComponentAlignment(button_green, new Alignment(48));

		// button_blue
		button_blue = new Embedded(null, new ThemeResource("./images/blue.png"));
		button_blue.setCaption("blue");
		button_blue.setImmediate(true);
		button_blue.setWidth("-1px");
		button_blue.setHeight("-1px");
		button_blue.setStyleName("xmas-button-blue");
		button_blue.addListener(listener);
		panel.addComponent(button_blue, 2, 1);
		panel.setComponentAlignment(button_blue, new Alignment(48));

		// button_white
		button_white = new Embedded(null, new ThemeResource("./images/white.png"));
		button_white.setCaption("white");
		button_white.setImmediate(true);
		button_white.setWidth("-1px");
		button_white.setHeight("-1px");
		button_white.addListener(listener);
		button_white.setStyleName("xmas-button-white");
		panel.addComponent(button_white, 3, 1);
		panel.setComponentAlignment(button_white, new Alignment(48));

		// button_darkorange
		button_darkorange = new Embedded(null, new ThemeResource("./images/darkorange.png"));
		button_darkorange.setCaption("dark orange");
		button_darkorange.setImmediate(true);
		button_darkorange.setWidth("-1px");
		button_darkorange.setHeight("-1px");
		button_darkorange.addListener(listener);
		button_darkorange.setStyleName("xmas-button-darkorange");
		panel.addComponent(button_darkorange, 0, 2);
		panel.setComponentAlignment(button_darkorange, new Alignment(48));

		// button_lightgreen
		button_lightgreen = new Embedded(null, new ThemeResource("./images/lightgreen.png"));
		button_lightgreen.setCaption("light green");
		button_lightgreen.setImmediate(true);
		button_lightgreen.setWidth("-1px");
		button_lightgreen.setHeight("-1px");
		button_lightgreen.addListener(listener);
		button_lightgreen.setStyleName("xmas-button-lightgreen");
		panel.addComponent(button_lightgreen, 1, 2);
		panel.setComponentAlignment(button_lightgreen, new Alignment(48));

		// button_lightblue
		button_lightblue = new Embedded(null, new ThemeResource("./images/lightblue.png"));
		button_lightblue.setCaption("light blue");
		button_lightblue.setImmediate(true);
		button_lightblue.setWidth("-1px");
		button_lightblue.setHeight("-1px");
		button_lightblue.addListener(listener);
		button_lightblue.setStyleName("xmas-button-lightblue");
		panel.addComponent(button_lightblue, 2, 2);
		panel.setComponentAlignment(button_lightblue, new Alignment(48));

		// button_flash
		button_flash = new Embedded(null, new ThemeResource("./images/flash.png"));
		button_flash.setCaption("FLASH");
		button_flash.setImmediate(true);
		button_flash.setWidth("-1px");
		button_flash.setHeight("-1px");
		button_flash.addListener(listener);
		button_flash.setStyleName("xmas-button-flash");
		panel.addComponent(button_flash, 3, 2);
		panel.setComponentAlignment(button_flash, new Alignment(48));

		// button_orange
		button_orange = new Embedded(null, new ThemeResource("./images/orange.png"));
		button_orange.setCaption("orange");
		button_orange.setImmediate(true);
		button_orange.setWidth("-1px");
		button_orange.setHeight("-1px");
		button_orange.addListener(listener);
		button_orange.setStyleName("xmas-button-orange");
		panel.addComponent(button_orange, 0, 3);
		panel.setComponentAlignment(button_orange, new Alignment(48));

		// button_lightcyan
		button_lightcyan = new Embedded(null, new ThemeResource("./images/lightcyan.png"));
		button_lightcyan.setCaption("ligth cyan");
		button_lightcyan.setImmediate(true);
		button_lightcyan.setWidth("-1px");
		button_lightcyan.setHeight("-1px");
		button_lightcyan.addListener(listener);
		button_lightcyan.setStyleName("xmas-button-lightcyan");
		panel.addComponent(button_lightcyan, 1, 3);
		panel.setComponentAlignment(button_lightcyan, new Alignment(48));

		// button_darkpurple
		button_darkpurple = new Embedded(null, new ThemeResource("./images/darkpurple.png"));
		button_darkpurple.setCaption("dark purple");
		button_darkpurple.setImmediate(true);
		button_darkpurple.setWidth("-1px");
		button_darkpurple.setHeight("-1px");
		button_darkpurple.addListener(listener);
		button_darkpurple.setStyleName("xmas-button-darkpurple");
		panel.addComponent(button_darkpurple, 2, 3);
		panel.setComponentAlignment(button_darkpurple, new Alignment(48));

		// button_strobe
		button_strobe = new Embedded(null, new ThemeResource("./images/strobe.png"));
		button_strobe.setCaption("STROBO");
		button_strobe.setImmediate(true);
		button_strobe.setWidth("-1px");
		button_strobe.setHeight("-1px");
		button_strobe.addListener(listener);
		button_strobe.setStyleName("xmas-button-strobe");
		panel.addComponent(button_strobe, 3, 3);
		panel.setComponentAlignment(button_strobe, new Alignment(48));

		// button_lightorange
		button_lightorange = new Embedded(null, new ThemeResource("./images/lightorange.png"));
		button_lightorange.setCaption("light orange");
		button_lightorange.setImmediate(true);
		button_lightorange.setWidth("-1px");
		button_lightorange.setHeight("-1px");
		button_lightorange.addListener(listener);
		button_lightorange.setStyleName("xmas-button-lightorange");
		panel.addComponent(button_lightorange, 0, 4);
		panel.setComponentAlignment(button_lightorange, new Alignment(48));

		// button_cyan
		button_cyan = new Embedded(null, new ThemeResource("./images/cyan.png"));
		button_cyan.setCaption("cyan");
		button_cyan.setImmediate(false);
		button_cyan.setWidth("-1px");
		button_cyan.setHeight("-1px");
		button_cyan.addListener(listener);
		button_cyan.setStyleName("xmas-button-cyan");
		panel.addComponent(button_cyan, 1, 4);
		panel.setComponentAlignment(button_cyan, new Alignment(48));

		// button_purple
		button_purple = new Embedded(null, new ThemeResource("./images/purple.png"));
		button_purple.setCaption("purple");
		button_purple.setImmediate(true);
		button_purple.setWidth("-1px");
		button_purple.setHeight("-1px");
		button_purple.addListener(listener);
		button_purple.setStyleName("xmas-button-purple");
		panel.addComponent(button_purple, 2, 4);
		panel.setComponentAlignment(button_purple, new Alignment(48));

		// button_fade
		button_fade = new Embedded(null, new ThemeResource("./images/fade.png"));
		button_fade.setCaption("FADE");
		button_fade.setImmediate(true);
		button_fade.setWidth("-1px");
		button_fade.setHeight("-1px");
		button_fade.addListener(listener);
		button_fade.setStyleName("xmas-button-fade");
		panel.addComponent(button_fade, 3, 4);
		panel.setComponentAlignment(button_fade, new Alignment(48));

		// button_yellow
		button_yellow = new Embedded(null, new ThemeResource("./images/yellow.png"));
		button_yellow.setCaption("yellow");
		button_yellow.setImmediate(true);
		button_yellow.setWidth("-1px");
		button_yellow.setHeight("-1px");
		button_yellow.addListener(listener);
		button_yellow.setStyleName("xmas-button-yellow");
		panel.addComponent(button_yellow, 0, 5);
		panel.setComponentAlignment(button_yellow, new Alignment(48));

		// button_darkcyan
		button_darkcyan = new Embedded(null, new ThemeResource("./images/darkcyan.png"));
		button_darkcyan.setCaption("dark cyan");
		button_darkcyan.setImmediate(true);
		button_darkcyan.setWidth("-1px");
		button_darkcyan.setHeight("-1px");
		button_darkcyan.addListener(listener);
		button_darkcyan.setStyleName("xmas-button-darkcyan");
		panel.addComponent(button_darkcyan, 1, 5);
		panel.setComponentAlignment(button_darkcyan, new Alignment(48));

		// button_lightpurple
		button_lightpurple = new Embedded(null, new ThemeResource("./images/lightpurple.png"));
		button_lightpurple.setCaption("light purple");
		button_lightpurple.setImmediate(true);
		button_lightpurple.setWidth("-1px");
		button_lightpurple.setHeight("-1px");
		button_lightpurple.addListener(listener);
		button_lightpurple.setStyleName("xmas-button-lightpurple");
		panel.addComponent(button_lightpurple, 2, 5);
		panel.setComponentAlignment(button_lightpurple, new Alignment(48));

		// button_smooth
		button_smooth = new Embedded(null, new ThemeResource("./images/smooth.png"));
		button_smooth.setCaption("SMOOTH");
		button_smooth.setImmediate(true);
		button_smooth.setWidth("-1px");
		button_smooth.setHeight("-1px");
		button_smooth.addListener(listener);
		button_smooth.setStyleName("xmas-button-smooth");
		panel.addComponent(button_smooth, 3, 5);
		panel.setComponentAlignment(button_smooth, new Alignment(48));

		// button_snow
		button_snow = new Embedded(null, new ThemeResource("./images/snowflake.png"));
		button_snow.setCaption("Let it snow");
		button_snow.setImmediate(true);
		button_snow.setWidth("-1px");
		button_snow.setHeight("-1px");
		button_snow.addListener(listener);
		button_snow.setStyleName("xmas-button-snow");
		panel.addComponent(button_snow, 0, 6);
		panel.setComponentAlignment(button_snow, new Alignment(48));

		// button_star
		button_star = new Embedded(null, new ThemeResource("./images/star.png"));
		button_star.setCaption("Star");
		button_star.setImmediate(true);
		button_star.setWidth("-1px");
		button_star.setHeight("-1px");
		button_star.addListener(listener);
		button_star.setStyleName("xmas-button-star");
		panel.addComponent(button_star, 1, 6);
		panel.setComponentAlignment(button_star, new Alignment(48));

		// button_angel
		button_angel = new Embedded(null, new ThemeResource("./images/angel.png"));
		button_angel.setCaption("Angel");
		button_angel.setImmediate(true);
		button_angel.setWidth("-1px");
		button_angel.setHeight("-1px");
		button_angel.addListener(listener);
		button_angel.setStyleName("xmas-button-angel");
		panel.addComponent(button_angel, 3, 6);
		panel.setComponentAlignment(button_angel, new Alignment(48));

		return panel;
	}

	public class Listener implements MouseEvents.ClickListener {

		@Override
		public void click(com.vaadin.event.MouseEvents.ClickEvent event) {
			Embedded button = (Embedded) event.getSource();
			if (button == button_on) {
				delegate.execute(CommandDelegate.ON);
			} else if (button == button_off) {
				delegate.execute(CommandDelegate.OFF);
			} else if (button == button_brighter) {
				delegate.execute(CommandDelegate.BRIGHTER);
			} else if (button == button_darker) {
				delegate.execute(CommandDelegate.DARKER);
			} else if (button == button_red) {
				delegate.execute(CommandDelegate.RED);
			} else if (button == button_green) {
				delegate.execute(CommandDelegate.GREEN);
			} else if (button == button_blue) {
				delegate.execute(CommandDelegate.BLUE);
			} else if (button == button_white) {
				delegate.execute(CommandDelegate.WHITE);
			} else if (button == button_darkorange) {
				delegate.execute(CommandDelegate.DARKORANGE);
			} else if (button == button_orange) {
				delegate.execute(CommandDelegate.ORANGE);
			} else if (button == button_lightorange) {
				delegate.execute(CommandDelegate.LIGHTORANGE);
			} else if (button == button_yellow) {
				delegate.execute(CommandDelegate.YELLOW);
			} else if (button == button_lightgreen) {
				delegate.execute(CommandDelegate.LIGHTGREEN);
			} else if (button == button_darkcyan) {
				delegate.execute(CommandDelegate.DARKCYAN);
			} else if (button == button_cyan) {
				delegate.execute(CommandDelegate.CYAN);
			} else if (button == button_lightcyan) {
				delegate.execute(CommandDelegate.LIGHTCYAN);
			} else if (button == button_lightblue) {
				delegate.execute(CommandDelegate.LIGHTBLUE);
			} else if (button == button_darkpurple) {
				delegate.execute(CommandDelegate.DARKPURPLE);
			} else if (button == button_purple) {
				delegate.execute(CommandDelegate.PURPLE);
			} else if (button == button_lightpurple) {
				delegate.execute(CommandDelegate.LIGHTPURPLE);
			} else if (button == button_flash) {
				delegate.execute(CommandDelegate.FLASH);
			} else if (button == button_strobe) {
				delegate.execute(CommandDelegate.STROBE);
			} else if (button == button_fade) {
				delegate.execute(CommandDelegate.FADE);
			} else if (button == button_smooth) {
				delegate.execute(CommandDelegate.SMOOTH);
			} else if (button == button_angel) {
				delegate.execute(CommandDelegate.ANGEL);
			} else if (button == button_star) {
				delegate.execute(CommandDelegate.STAR);
			} else if (button == button_snow) {
				delegate.execute(CommandDelegate.SNOWING);
			}
		}
	}

	public interface CommandDelegate {
		public static final int SMOOTH = 24;
		public static final int FADE = 23;
		public static final int FLASH = 21;
		public static final int LIGHTPURPLE = 19;
		public static final int PURPLE = 18;
		public static final int DARKPURPLE = 17;
		public static final int LIGHTBLUE = 16;
		public static final int LIGHTCYAN = 12;
		public static final int CYAN = 13;
		public static final int DARKCYAN = 14;
		public static final int LIGHTGREEN = 11;
		public static final int YELLOW = 9;
		public static final int LIGHTORANGE = 8;
		public static final int ORANGE = 7;
		public static final int DARKORANGE = 6;
		public static final int WHITE = 20;
		public static final int BLUE = 15;
		public static final int GREEN = 10;
		public static final int RED = 5;
		public static final int DARKER = 2;
		public static final int BRIGHTER = 1;
		public static final int ON = 4;
		public static final int OFF = 3;
		public static final int STROBE = 22;
		public static final int STAR = 25;
		public static final int ANGEL = 26;
		public static final int SNOWING = 27;

		void execute(int command);

		void register(MqttCallback callback, String topic);

	}

	@Override
	public void messageArrived(String topic, MqttMessage message) throws Exception {
		// nothing to do
	}

	@Override
	public void connectionLost(Throwable arg0) {
		// nothing to do
	}

	@Override
	public void deliveryComplete(IMqttDeliveryToken arg0) {
		// nothing to do
	}
}
